FROM sriggi/caesar:latest

MAINTAINER Simone Riggi "simone.riggi@gmail.com"

######################################
##   DEFINE CUSTOMIZABLE ARGS/ENVS
######################################
ARG USER_ARG=caesar
ENV USER $USER_ARG

ARG PORT_ARG=3031
ENV PORT $PORT_ARG

ARG DATADIR_ARG=/opt/caesar-rest/data
ENV DATADIR $DATADIR_ARG

ARG JOBDIR_ARG=/opt/caesar-rest/jobs
ENV JOBDIR $DATADIR_ARG

ARG NWORKERS_ARG=2
ENV NWORKERS $NWORKERS_ARG

ARG NTHREADS_ARG=2
ENV NTHREADS $NTHREADS_ARG

ARG DBHOST_ARG=127.0.0.1
ENV DBHOST $DBHOST_ARG

ARG DBPORT_ARG=27017
ENV DBPORT $DBPORT_ARG

ARG DBNAME_ARG=caesardb
ENV DBNAME $DBNAME_ARG

ARG SECRETFILE_ARG=/etc/systemd/system/client_secrets.json
ENV SECRETFILE $SECRETFILE_ARG

#ARG AAI_ARG 
#ENV AAI ${AAI_ARG:+"--aai"}
ARG AAI_ARG=0
ENV AAI $AAI_ARG


ARG BROKER_HOST_ARG="127.0.0.1"
ENV BROKER_HOST $BROKER_HOST_ARG

ARG BROKER_PORT_ARG="5672"
ENV BROKER_PORT $BROKER_PORT_ARG

ARG BROKER_PROTO_ARG="amqp"
ENV BROKER_PROTO $BROKER_PROTO_ARG

ARG BROKER_USER_ARG="guest"
ENV BROKER_USER $BROKER_USER_ARG

ARG BROKER_PASS_ARG="guest"
ENV BROKER_PASS $BROKER_PASS_ARG

ENV BROKER_URL "$BROKER_PROTO://$BROKER_USER:$BROKER_PASS@$BROKER_HOST:$BROKER_PORT/"

ARG RESULT_BACKEND_HOST_ARG="127.0.0.1"
ENV RESULT_BACKEND_HOST $RESULT_BACKEND_HOST_ARG

ARG RESULT_BACKEND_PORT_ARG="27017"
ENV RESULT_BACKEND_PORT $RESULT_BACKEND_PORT_ARG

ARG RESULT_BACKEND_PROTO_ARG="mongodb"
ENV RESULT_BACKEND_PROTO $RESULT_BACKEND_PROTO_ARG

ARG RESULT_BACKEND_DBNAME_ARG="caesardb"
ENV RESULT_BACKEND_DBNAME $RESULT_BACKEND_DBNAME_ARG

ENV RESULT_BACKEND_URL "$RESULT_BACKEND_PROTO://$RESULT_BACKEND_HOST:$RESULT_BACKEND_PORT/$RESULT_BACKEND_DBNAME"

RUN echo "BROKER_URL=$BROKER_URL"
RUN echo "RESULT_BACKEND_URL=$RESULT_BACKEND_URL"

##########################################################
##     INSTALL SYS LIBS (IF NOT PRESENT IN BASE IMAGE
##########################################################
# - Unset PYTHONPATH
#RUN unset PYTHONPATH

# - Install python3.6
RUN unset PYTHONPATH && add-apt-repository ppa:deadsnakes/ppa
RUN apt-get update
RUN apt-get install -y python3.6 python3.6-dev 

# - Install pip3.6
RUN unset PYTHONPATH && curl https://bootstrap.pypa.io/get-pip.py | python3.6

# - Install packages
##RUN apt-get update && apt-get --no-install-recommends install -y dialog apt-utils apt-transport-https ca-certificates gnupg gnupg2 wget libcurl3 openssl systemd curl software-properties-common dpkg-dev g++ gcc binutils libtool pkg-config build-essential autoconf automake cmake nano unzip locate less git libssl-dev uuid-dev libcap-dev libpcre3-dev
RUN apt-get update && apt-get --no-install-recommends install -y libcurl3 openssl libssl-dev uuid-dev libcap-dev libpcre3-dev util-linux


######################################
##     INSTALL CAESAR-REST DEPS
######################################
# - Install uwsgi
##RUN apt-get install -y uwsgi uwsgi-src uwsgi-plugin-python3
RUN unset PYTHONPATH && pip3.6 install --upgrade uwsgi

# - Generate uwsgi plugin for python3.6
#ENV PYTHON python3.6
#RUN uwsgi --build-plugin "/usr/src/uwsgi/plugins/python python36" && mv python36_plugin.so /usr/lib/uwsgi/plugins/ && chmod 644 /usr/lib/uwsgi/plugins/python36_plugin.so
#RUN ls -la "/usr/lib/uwsgi/plugins/"

# - Install nginx
##RUN apt-get install -y nginx

# - Install python modules
RUN unset PYTHONPATH && pip3.6 install --upgrade numpy itsdangerous MarkupSafe==1.1.1 jinja2==2.10.1 werkzeug flask pyyaml flask-pymongo flask_oidc_ex celery[mongodb]==4.2.0 


######################################
##     INSTALL CAESAR
######################################


######################################
##     INSTALL CAESAR-REST
######################################
ENV INSTALL_DIR /opt/caesar-rest

# - Create the installation & other directories
RUN mkdir -p $INSTALL_DIR $INSTALL_DIR/src $INSTALL_DIR/lib/python3.6/site-packages $INSTALL_DIR/data $INSTALL_DIR/jobs $INSTALL_DIR/config $INSTALL_DIR/logs $INSTALL_DIR/run $INSTALL_DIR/share

# - Clone caesar-rest
RUN cd $INSTALL_DIR/src && git clone https://github.com/SKA-INAF/caesar-rest.git .

# - Create user & set permissions
RUN adduser --disabled-password --gecos "" $USER && \
    mkdir -p /home/$USER && \
    chown -R $USER:$USER /home/$USER && \
    chown -R $USER:$USER $INSTALL_DIR && \
    #chown -R www-data $INSTALL_DIR/run && \
		#chown -R $USER $INSTALL_DIR/run && \
    echo "export PYTHONPATH=$INSTALL_DIR/lib/python3.6/site-packages:\$PYTHONPATH" >> /home/$USER/.profile

# - Build & install
RUN cd $INSTALL_DIR/src && \
    unset PYTHONPATH && python3.6 setup.py sdist bdist_wheel && \
    unset PYTHONPATH && python3.6 setup.py build && \
    unset PYTHONPATH && python3.6 setup.py install --prefix=$INSTALL_DIR

######################################
##     INSTALL MASK RCNN
######################################
ENV MASKRCNN_DIR /opt/Software/MaskR-CNN
ENV MASKRCNN_INSTALL_DIR $MASKRCNN_DIR/install
ENV NNWEIGHTS $INSTALL_DIR/share/mrcnn_weights.h5

# - Install dependencies
#RUN unset PYTHONPATH && pip3.6 install h5py imgaug Pillow cython scipy pyparsing matplotlib astropy==2.0.16 scikit-image==0.15.0 scikit-learn==0.23.2 keras-applications==1.0.2 keras-preprocessing==1.0.1 keras==2.2.4 tensorflow==1.13.2 
RUN unset PYTHONPATH && pip3.6 install h5py imgaug Pillow cython scipy pyparsing matplotlib astropy==2.0.16 scikit-image==0.15.0 scikit-learn==0.23.2 keras==2.2.4 tensorflow==1.13.2 

# - Clone mrcnn
RUN mkdir -p $MASKRCNN_DIR $MASKRCNN_INSTALL_DIR $MASKRCNN_INSTALL_DIR/lib/python3.6/site-packages
RUN cd $MASKRCNN_DIR && git clone https://github.com/SKA-INAF/mrcnn.git

# - Build & install
ENV PYTHONPATH $MASKRCNN_INSTALL_DIR/lib/python3.6/site-packages/
RUN cd $MASKRCNN_DIR/mrcnn && \
    python3.6 setup.py sdist bdist_wheel && \
    python3.6 setup.py build && \
    python3.6 setup.py install --prefix=$MASKRCNN_INSTALL_DIR

######################################
##     CONFIGURE CAESAR-REST
######################################
# - Configure uwsgi
##ENV UWSGI_PLUGIN_DIR "/usr/lib/uwsgi/plugins/"
##ENV UWSGI_PLUGIN "python36"
ENV UWSGI_FILE "$INSTALL_DIR/bin/run_app.py"
##ENV UWSGI_PYARGS "$AAI --secretfile=$SECRETFILE --sfindernn_weights=$NNWEIGHTS --db --dbhost=$DBHOST --dbname=$DBNAME --dbport=$DBPORT --result_backend_host=$RESULT_BACKEND_HOST --result_backend_port=$RESULT_BACKEND_PORT --result_backend_proto=$RESULT_BACKEND_PROTO --result_backend_dbname=$RESULT_BACKEND_DBNAME --broker_host=$BROKER_HOST --broker_port=$BROKER_PORT --broker_proto=$BROKER_PROTO --broker_user=$BROKER_USER --broker_pass=$BROKER_PASS"
ENV UWSGI_SOCKET_TIMEOUT 65
ENV UWSGI_HTTP_TIMEOUT 3600000
ENV UWSGI_BUFFER_SIZE 32768
ENV UWSGI_CHMOD_SOCKET 660


######################################
##     SET VARS
######################################

# - Set vars
ENV CAESAR_REST_DIR $INSTALL_DIR
ENV CAESAR_DIR /opt/Software/caesar/install
ENV CAESAR_SCRIPTS_DIR $CAESAR_DIR/scripts

# - Set PATH vars
ENV PATH $CAESAR_REST_DIR/bin:$CAESAR_DIR/bin:$CAESAR_SCRIPTS_DIR:$MASKRCNN_INSTALL_DIR/bin:$PATH
ENV LD_LIBRARY_PATH $CAESAR_REST_DIR/lib:$CAESAR_DIR/lib:$LD_LIBRARY_PATH
ENV PYTHONPATH $CAESAR_REST_DIR/lib/python3.6/site-packages:$CAESAR_REST_DIR/lib/python3.6/site-packages/caesar_rest-1.0.0-py3.6.egg/:$MASKRCNN_INSTALL_DIR/lib/python3.6/site-packages/mrcnn-1.0.0-py3.6.egg:$PYTHONPATH

RUN echo "export PATH=$PATH" >> /home/$USER/.profile
RUN echo "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH" >> /home/$USER/.profile
RUN echo "export PYTHONPATH=$PYTHONPATH" >> /home/$USER/.profile


######################################
##     SET RUN OPTIONS
######################################
# - Expose container port
EXPOSE $PORT

# - Copy run script
COPY run_uwsgi.sh /opt/caesar-rest/bin/run_uwsgi.sh
RUN chmod +x /opt/caesar-rest/bin/run_uwsgi.sh


# - Run with unix socket (only same machine)
##CMD /usr/local/bin/uwsgi --binary-path /usr/local/bin/uwsgi --wsgi-file /opt/caesar-rest/bin/run_app.py --callable app --pyargv=" --secretfile=/etc/systemd/system/client_secrets.json --sfindernn_weights=/opt/caesar-rest/share/mrcnn_weights.h5 --db --dbhost=localhost --dbname=caesardb" --workers=2 --enable-threads --threads=2 --socket=/opt/caesar-rest/run/caesar-rest.sock --socket-timeout=65 --master --chmod-socket=660 --vacuum --die-on-term

# - Run with tcp socket over uwsgi protocol
#CMD ["sh", "-c", "/usr/local/bin/uwsgi --binary-path /usr/local/bin/uwsgi --wsgi-file $UWSGI_FILE --callable app --pyargv=\"$UWSGI_PYARGS\" --workers=$NWORKERS --enable-threads --threads=$NTHREADS --socket :$PORT --socket-timeout=$UWSGI_SOCKET_TIMEOUT --master --chmod-socket=$UWSGI_CHMOD_SOCKET --vacuum --die-on-term"]

#CMD ["sh", "-c", "/opt/caesar-rest/bin/run_uwsgi.sh","--port=$PORT","--file=$UWSGI_FILE","--nworkers=$NWORKERS","--nthreads=$NTHREADS","--socket-timeout=$UWSGI_SOCKET_TIMEOUT","--chmod-socket=$UWSGI_CHMOD_SOCKET","--bufsize=$UWSGI_BUFFER_SIZE","--aai=$AAI","--secretfile=$SECRETFILE","--nnweights=$NNWEIGHTS","--dbhost=$DBHOST","--dbport=$DBPORT","--dbname=$DBNAME","--result-backend-host=$RESULT_BACKEND_HOST","--result-backend-port=$RESULT_BACKEND_PORT","--result-backend-proto=$RESULT_BACKEND_PROTO","--result-backend-dbname=$RESULT_BACKEND_DBNAME","--broker-host=$BROKER_HOST","--broker-port=$BROKER_PORT","--broker-proto=$BROKER_PROTO","--broker-user=$BROKER_USER","--broker-pass=$BROKER_PASS"]

CMD ["sh", "-c", "/opt/caesar-rest/bin/run_uwsgi.sh --port=$PORT --datadir=$DATADIR --jobdir=$JOBDIR --file=$UWSGI_FILE --nworkers=$NWORKERS --nthreads=$NTHREADS --socket-timeout=$UWSGI_SOCKET_TIMEOUT --chmod-socket=$UWSGI_CHMOD_SOCKET --bufsize=$UWSGI_BUFFER_SIZE --aai=$AAI --secretfile=$SECRETFILE --nnweights=$NNWEIGHTS --dbhost=$DBHOST --dbport=$DBPORT --dbname=$DBNAME --result-backend-host=$RESULT_BACKEND_HOST --result-backend-port=$RESULT_BACKEND_PORT --result-backend-proto=$RESULT_BACKEND_PROTO --result-backend-dbname=$RESULT_BACKEND_DBNAME --broker-host=$BROKER_HOST --broker-port=$BROKER_PORT --broker-proto=$BROKER_PROTO --broker-user=$BROKER_USER --broker-pass=$BROKER_PASS"]


# - Run with tcp socket over http protocol
#CMD ["sh", "-c", "/usr/local/bin/uwsgi --plugin python,http --binary-path /usr/local/bin/uwsgi --wsgi-file $UWSGI_FILE --callable app --pyargv=\"$UWSGI_PYARGS\" --workers=$NWORKERS --enable-threads --threads=$NTHREADS --http :$PORT --http-timeout=$UWSGI_HTTP_TIMEOUT --socket-timeout=$UWSGI_SOCKET_TIMEOUT --master --chmod-socket=$UWSGI_CHMOD_SOCKET --vacuum --die-on-term"]


